syntax = "proto3";
package protos;

//enum RoomTypePt{
//    NONE = 0;         //无效占位数值，protobuf枚举必须包含0
//    CUSTOM = 1;       //自定义房间
//    MATCH = 2;        //匹配房间
//    SEASONPVE = 3;    //赛季PVE房间
//    WORLDBOSSPVE = 4; //世界boss房间
//}
//
//enum BattleTypePt {
//    NONE = 0;            //初始值
//    ONEVONEVONEVONE = 1; //1v1v1v1
//    TWOVTWO = 2;         //2v2
//    ONEVONE = 3;         //1v1
//}

//回合时间封装体
message RoundTimePt{
    uint32 consume_time = 1; //消耗时间
    uint32 fixed_time = 2;//固定时间
}

message RoomSettingPt{
    uint32 battle_type = 1;//战斗模式
    RoundTimePt round_time = 2;//回合时间
    bool is_open_world_tile = 3;//是否开启中立特殊块
    uint32 victory_condition = 4;//胜利条件
}

//玩家信息
message PlayerPt{
    string nick_name = 1;//昵称
    uint32 last_character = 2;//最近一次使用到角色id
	repeated uint32 dlc = 3;//dlc
}

// 资源封装
message ResourcesPt{
    uint32 type = 1;//类型
    uint32 id = 2;//资源id
    uint32 num = 3;//数量
}

//目标结构体
message TargetPt{
    uint32 team_id = 1;//目标队伍
    uint32 user_id = 2;//目标队伍所在的目标玩家
}

//队伍成员结构体
message MemberPt{
    uint32 user_id = 1;//玩家id
    string nick_name = 2;//玩家昵称
    CharacterPt cter = 3;//玩家已经选择的角色数据
    uint32 state = 4;//玩家状态，是否已经准备
    uint32 team_id = 5;//玩家所属队伍id
}

//地图数据
message TileMapPt{
    uint32 id = 1;//map的ID
    repeated CellPt cell_array = 2;//格子数组
}

//格子数据
message CellPt{
    uint32 type = 1;//值类型（0:正常地图值 1:角色id 2:其他）
    uint32 value = 2;//值
}

//房间数据
message RoomPt{
    uint32 room_id = 1;//房间id
    uint32 owner_id = 2;//房主ID
    RoomSettingPt setting = 3;//房间设置
    repeated MemberPt members = 4;//成员数据
}

//历史消息
message HistoryMessPt{

}

//推送消息
message NoticeMessPt{

}

//玩家角色数据
message CharacterPt{
    uint32 temp_id = 1;//角色的配置id
    uint32 grade = 2;//角色等级
    repeated uint32 last_use_skills = 3;
    repeated uint32 skills = 4;//玩家次角色所有已解锁的技能id
}